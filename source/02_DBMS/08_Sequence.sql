-- [VIII] Sequence: 순차번호 생성기. 인위적인 PK 사용 용도
-- 시퀀스 삭제
DROP SEQUENCE FRIEND_SEQ;
-- 시퀀스 생성
CREATE SEQUENCE FRIEND_SEQ
    START WITH 1   -- 1부터 시작(기본값)
    INCREMENT BY 1 -- 1씩 증가(기본값)
    MAXVALUE 9999  -- 최댓값
    MINVALUE 1     -- 최솟값
    NOCACHE        -- 시퀀스 미리 생성 방지
    NOCYCLE;       -- 최댓값까지만 값 생성
    
-- 다음 순차번호 생성
SELECT FRIEND_SEQ.NEXTVAL FROM DUAL; 
-- 시퀀스의 현재 값 확인
SELECT FRIEND_SEQ.CURRVAL FROM DUAL;

-- EX1. FRIEND 테이블(NO-PK, NAME, TEL, ADDRESS, LAST_MODIFY)
-- FRIEND_SEQ 삭제
DROP SEQUENCE FRIEND_SEQ;
-- FRIEND_SEQ 생성
CREATE SEQUENCE FRIEND_SEQ
    MAXVALUE 99999 NOCACHE NOCYCLE; -- MAXVALUE, NOCACHE, NOCYCLE는 필수로 적어주기
-- FRIEND 테이블 삭제
DROP TABLE FRIEND;
-- FRIEND 테이블 생성
CREATE TABLE FRIEND (
    NO          NUMBER(5)      PRIMARY KEY,
    NAME        VARCHAR2(30)   NOT NULL,
    TEL         VARCHAR2(20)   UNIQUE, -- NULL 허용, NULL이 아닐 때는 유일한 값
    ADDRESS     VARCHAR2(255),
    LAST_MODIFY DATE           DEFAULT SYSDATE
);
-- 데이터 INSERT
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, '홍길동', NULL, '서울시 관악구'); -- 여러 번 실행 가능
-- 테이블 확인
SELECT * FROM FRIEND;
-- INSERT 에러(BUT 시퀀스는 소요됨)
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, NULL, '010-9999-9999', '서울'); -- 에러(NOT NULL)
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SEQ.NEXTVAL, '박길동', '010-9999-9999', '서울'); -- 에러(NOT NULL)
SELECT * FROM FRIEND; -- 박길동 NO 5

-- EX2. FRIEND 테이블(NO20240924001, 날짜002-PK, NAME, TEL, ADDRESS, LAST_MODIFY)
-- FRIEND_SEQ 삭제
DROP SEQUENCE FRIEND_SEQ;
-- FRIEND_SEQ 생성
CREATE SEQUENCE FRIEND_SEQ
    MAXVALUE 999 NOCACHE NOCYCLE; -- MAXVALUE, NOCACHE, NOCYCLE는 필수로 적어주기
-- FRIEND 테이블 삭제
DROP TABLE FRIEND;
-- FRIEND 테이블 생성
CREATE TABLE FRIEND (
    NO          NUMBER(11)      PRIMARY KEY,
    NAME        VARCHAR2(30)   NOT NULL,
    TEL         VARCHAR2(20)   UNIQUE, -- NULL 허용, NULL이 아닐 때는 유일한 값
    ADDRESS     VARCHAR2(255),
    LAST_MODIFY DATE           DEFAULT SYSDATE
);
SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') || TRIM(TO_CHAR(33, '000')) FROM DUAL;
-- 데이터 INSERT
INSERT INTO FRIEND (NO, NAME, TEL, ADDRESS)
    VALUES (TO_CHAR(SYSDATE, 'YYYYMMDD') || TRIM(TO_CHAR(FRIEND_SEQ.NEXTVAL, '000')), 
            '홍길동', NULL, '서울시 관악구');
-- 테이블 확인
SELECT * FROM FRIEND;

-- QUIZ.
-- 아래의 요구사항을 만족하는 데이터베이스를 설계하고, 테이블을 생성, 데이터를 입력하는 SQL문을 조건에 맞게 작성하시오.

-- (1) 같은 이름의 테이블이나 시퀀스가 있을 수 있으니 먼저 삭제하고 테이블을 생성하시오
DROP TABLE MEMBER;
DROP TABLE MEMBER_LEVEL;

CREATE TABLE MEMBER_LEVEL (
    LEVELNO   NUMBER(1)   PRIMARY KEY,
    LEVELNAME VARCHAR(10) NOT NULL
);
CREATE TABLE MEMBER (
    mNO   NUMBER(9),
    mNAME VARCHAR2(16)  NOT NULL,
    mPW   VARCHAR2(8)   NOT NULL,
    mEMAIL VARCHAR2(50),
    mPOINT NUMBER(9),
    mRDATE DATE         DEFAULT SYSDATE,
    LEVELNO NUMBER(1)   DEFAULT 0,
    PRIMARY KEY(mNO),
    UNIQUE(mEMAIL),
    CHECK(mPOINT >= 0),
    FOREIGN KEY(LEVELNO) REFERENCES MEMBER_LEVEL(LEVELNO)
);

-- MEMBER_MNO_SEQ 삭제
DROP SEQUENCE MEMBER_MNO_SEQ;
-- MEMBER_MNO_SEQ 생성
CREATE SEQUENCE MEMBER_MNO_SEQ
    MAXVALUE 9999 NOCACHE NOCYCLE;
-- 데이터 INSERT
INSERT INTO MEMBER_LEVEL VALUES (-1, 'black');
INSERT INTO MEMBER_LEVEL VALUES (0, '일반');
INSERT INTO MEMBER_LEVEL VALUES (1, '실버');
INSERT INTO MEMBER_LEVEL VALUES (2, '골드');
SELECT * FROM MEMBER_LEVEL;

INSERT INTO MEMBER (mNO, mNAME, mPW, mEMAIL, mPOINT)
    VALUES (MEMBER_MNO_SEQ.NEXTVAL, '홍길동', 'aa', 'hong@hong.com', 0);
INSERT INTO MEMBER (mNO, mNAME, mPW, mEMAIL, mPOINT, mRDATE, LEVELNO)
    VALUES (MEMBER_MNO_SEQ.NEXTVAL, '신길동', 'bb', 'sin@sin.com', 1000,
            TO_DATE('22/04/01','RR/MM/DD'), 1);
INSERT INTO MEMBER (mNO, mNAME, mPW, mEMAIL, mPOINT, mRDATE, LEVELNO)
    VALUES (MEMBER_MNO_SEQ.NEXTVAL, '김길동', 'bb', 'kim@sin.com', 1000,
            '22/04/01', 1);
SELECT * FROM MEMBER;
-- 테스트 출력
SELECT mNO, mNAME, mRDATE, mEMAIL, mPOINT point, LEVELNAME || '고객' levelname
    FROM MEMBER_LEVEL ML, MEMBER M
    WHERE ML.LEVELNO = M.LEVELNO;
