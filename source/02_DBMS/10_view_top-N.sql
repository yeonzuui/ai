-- [X] VIEW, IN-LINE VIEW, 
-- 1. VIEW: 가상의 테이블 (1) 단순뷰 (2) 복합뷰
-- (1) 단순뷰: 하나의 테이블을 이용해서 만든 뷰(가상의 테이블은 물리공간과 데이터가 따로 없음)
-- VIEW 생성, 이미 존재하면 교체
CREATE OR REPLACE VIEW EMPv0 -- EMP 테이블에서 특정 필드만 VIEW로 생성
    AS SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, DEPTNO FROM EMP;
SELECT * FROM EMPv0;
SELECT * FROM TAB; -- 현 계정이 소유한 테이블들(가상테이블인 VIEW도 포함)
SELECT * FROM USER_TABLES; -- 딕셔너리뷰(가상테이블 미포함)
SELECT * FROM USER_VIEWS; -- 현 계정이 소유한 VIEW
INSERT INTO EMPv0 VALUES (1111, '홍', 'MANAGER', NULL, NULL, 40); -- 뷰에 INSERT
SELECT * FROM EMPv0;
SELECT * FROM EMP; -- EMPv0에 삽입한 새로운 값이 EMP테이블에도 INSERT 됨
ROLLBACK;

CREATE OR REPLACE VIEW EMPv0 -- EMP테이블에서 특정 row만 VIEW로 생성 (딕셔너리 변경됨)
    AS SELECT * FROM EMP WHERE DEPTNO = 30;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 'MANAGER', NULL, NULL, 9000, NULL, 40);
SELECT * FROM EMPv0; -- INSERT 값(40번 부서) 보이지 않음, 30번 부서만 뽑은 VIEW
SELECT * FROM EMP; -- INSERT 값 보임

-- 단순뷰에서 INSERT가 불가한 경우: 뷰 생성시 NOT NULL 필드를 미포함한 경우
CREATE OR REPLACE VIEW EMPv0
    AS SELECT ENAME, JOB FROM EMP;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES ('홍', 'MANAGER');
DELETE FROM EMP WHERE EMPNO = 1111; -- INSERT 값 삭제

-- VIEW의 제한 조건 
-- 1. WITH CHECK OPTION 추가: 뷰의 조건에 해당되는 데이터만 INSERT, MODIFY, DELETE 가능
-- 2. WITH READ ONLY 추가: 읽기 전용 뷰 생성
CREATE OR REPLACE VIEW EMPv0
    AS SELECT * FROM EMP WHERE DEPTNO = 30
    WITH CHECK OPTION;
SELECT * FROM EMPv0 E, DEPT D WHERE E.DEPTNO = D.DEPTNO;
INSERT INTO EMPv0 (EMPNO, ENAME, DEPTNO) VALUES (1111, '홍', 30); -- INSERT 가능
INSERT INTO EMPv0 (EMPNO, ENAME, DEPTNO) VALUES (1112, '박', 40); -- INSERT 불가능(VIEW CHECK OPTION 위반)
SELECT * FROM EMP WHERE ENAME = 'SMITH'; -- SMITH는 20번 부서
DELETE FROM EMPv0 WHERE ENAME = 'SMITH'; -- VIEW(30번)에서 SMITH 삭제 불가(제한조건 미충족)
SELECT * FROM EMP WHERE ENAME = '홍'; -- '홍'은 30번 부서
DELETE FROM EMPv0 WHERE ENAME = '홍'; -- VIEW(30번)에서 '홍' 삭제 가능(제한조건 충족)
COMMIT;

-- 읽기 전용 단순뷰(WITH READ ONLY 추가)
CREATE OR REPLACE VIEW EMPv0
    AS SELECT * FROM EMP WHERE DEPTNO = 20
    WITH READ ONLY;
INSERT INTO EMPv0 (EMPNO, ENAME, DEPTNO )VALUES (1111, '홍', 20); -- read-only view ERROR

-- (2) 복합뷰: 2개 이상의 테이블로 구성한 뷰, 가상의 필드를 이용한 뷰, DML문을 제한적으로만 이용(SELECT)
-- ① 2개 이상의 테이블로 구성한 복합뷰
CREATE OR REPLACE VIEW EMPv0
    AS SELECT EMPNO, ENAME, JOB, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1111, '홍', 'MANAGER', 'SALES'); -- 30번 부서로 INSERT 불가능
-- ② 가상의 필드를 이용한 복합뷰(컬럼에 별칭을 사용)
CREATE OR REPLACE VIEW EMPv0 
    AS SELECT EMPNO, ENAME, SAL*12 YEAR_SAL FROM EMP WHERE DEPTNO = 10; -- 별칭을 필드
CREATE OR REPLACE VIEW EMPv0 (NO, NAME, YEAR_SAL) -- 별칭들만 따로
    AS SELECT EMPNO, ENAME, SAL*12 FROM EMP WHERE DEPTNO = 10;
SELECT * FROM EMPv0; 
INSERT INTO EMPv0 VALUES (1111, 'LEE', 1200); -- 복합뷰는 INSERT 불가

    -- EX1. 사번, 이름, 10의 자리에서 반올림한 급여를 VIEW로 생성(EMPv0) 1250 -> 1300
    CREATE OR REPLACE VIEW EMPv0
        AS SELECT EMPNO, ENAME, ROUND(SAL, -2) ROUND_SAL FROM EMP;
    INSERT INTO EMPv0 VALUES (1111, '홍', 1300); -- 가상의 필드를 포함한 복합뷰는 INSERT 불가
    SELECT * FROM EMPv0;
    -- EX2. 중복이 제거된 JOB, DEPTNO를 뷰로 생성
    CREATE OR REPLACE VIEW EMPv0
        AS SELECT DISTINCT JOB, DEPTNO FROM EMP; -- 중복제거 DISTINCT 
    SELECT * FROM EMPv0;
    -- EX3. 부서번호, 최소급여, 최대급여, 부서평균(소수점 1자리에서 반올림)을 포함한 뷰로 생성(EMPv0)
    CREATE OR REPLACE VIEW EMPv0 (DEPTNO, MINSAL, MAXSAL, AVGSAL)
        AS SELECT DEPTNO, MIN(SAL), MAX(SAL), ROUND(AVG(SAL), 1) FROM EMP GROUP BY DEPTNO; 
    SELECT * FROM EMPv0;
    -- EX4. 부서명, 최소급여, 최대급여, 부서평균(소수점 1자리에서 반올림)을 포함한 뷰로 생성(EMPv0)
    CREATE OR REPLACE VIEW EMPv0 (DNAME, MINSAL, MAXSAL, AVGSAL)
            AS SELECT DNAME, MIN(SAL), MAX(SAL), ROUND(AVG(SAL), 1) 
                    FROM EMP E, DEPT D
                    WHERE D.DEPTNO = E.DEPTNO 
                    GROUP BY DNAME; 
    SELECT * FROM EMPv0;    

-- (3) INLINE-VIEW: FROM절에 서브쿼리를 INLINE-VIEW라 하며, FROM절에 오는 서브쿼리는 VIEW 작용
    -- EX. 급여가 2000을 초과하는 사원의 평균 급여
    SELECT AVG(SAL) FROM EMP WHERE SAL > 2000;
    SELECT AVG(SAL) FROM (SELECT SAL FROM EMP WHERE SAL > 2000) E; -- 인라인뷰 뒤에 별칭 가능
-- SELECT 필드1, 필드2, ...
--  FROM (서브쿼리) 별칭, 테이블N, ...
--  WHERE 조건
    -- EX. 부서평균의 월급보다 높은 월급을 받는 사원의 사번, 이름, 급여, 부서번호, 해당 부서의 평균급여(반올림)
    SELECT EMPNO, ENAME, SAL, E.DEPTNO, TRIM(ROUND(AVGSAL, 1)) "AVGSAL"
        FROM EMP E, 
             (SELECT DEPTNO, AVG(SAL) "AVGSAL" FROM EMP GROUP BY DEPTNO) G
        WHERE E.DEPTNO = G.DEPTNO AND SAL > AVGSAL;
        
-- 3. TOP-N 구문(TOP 1-10등, 11-20등...)
    -- ROWNUM: 테이블로부터 가져온 출력될 데이터(행)의 논리적인 순서. 
SELECT ROWNUM, ENAME, SAL FROM EMP WHERE DEPTNO = 20;
SELECT ROWNUM, ENAME, SAL 급여 FROM EMP;
SELECT ROWNUM, ENAME, SAL -- 2
    FROM EMP              -- 1
    ORDER BY SAL;         -- 3
-- SAL 오름차순으로 RANK(1-꼴찌) 출력(ROWNUM, INLINE VIEW 사용)
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL); -- INLINE VIEW

-- SAL을 기준으로 1-5등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL)
    WHERE ROWNUM < 6;
    
-- SAL을 기준으로 6-10등
SELECT ROWNUM, ENAME, SAL
    FROM (SELECT * FROM EMP ORDER BY SAL)
    WHERE ROWNUM BETWEEN 6 AND 10; -- 출력 안 됨(첫번째 값은 ROWNUM =1로 시작, 영원히 WHERE절 조건을 만족하지 않음)

-- TOP-N
SELECT * FROM EMP ORDER BY SAL; -- 1단계: RANK 기준으로 ORDER BY 
SELECT ROWNUM RN, A.* FROM (SELECT * FROM EMP ORDER BY SAL) A; -- 2단계: ROWNUM(RANK 포함), ALIES 필수
SELECT * 
    FROM (SELECT ROWNUM RN, A.* FROM (SELECT * FROM EMP ORDER BY SAL) A)
    WHERE RN BETWEEN 6 AND 10; -- 3단계: TOP-N구문 (모든 필드)
SELECT * 
    FROM (SELECT ROWNUM RN, ENAME, SAL FROM (SELECT * FROM EMP ORDER BY SAL))
    WHERE RN BETWEEN 6 AND 10; -- 3단계: TOP-N구문 (일부 필드)
    
-- EX. 이름 알파벳순으로 6-10번째 사원을 출력(순서, 이름, 사번, JOB, MGR, HIREDATE)
SELECT * FROM EMP ORDER BY ENAME; -- 1
SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE FROM (SELECT * FROM EMP ORDER BY ENAME); -- 2
SELECT *
    FROM (SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE 
            FROM (SELECT * FROM EMP ORDER BY ENAME))
    WHERE RN BETWEEN 6 AND 10; -- 3
-- EX. 입사순으로 11-15번째인 사원의 모든 필드 출력(순서는 출력 안 함)
SELECT * FROM EMP ORDER BY HIREDATE; -- 1
SELECT ROWNUM RN, A.* FROM (SELECT * FROM EMP ORDER BY HIREDATE) A; -- 2
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
    FROM (SELECT ROWNUM RN, A.* 
            FROM (SELECT * FROM EMP ORDER BY HIREDATE) A) --3
    WHERE RN BETWEEN 11 AND 15;

-- ★ ★ ★ <총 연습문제> ★ ★ ★
-- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU
    AS SELECT DNAME, ENAME FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;
SELECT * FROM EMPv0;
-- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오
CREATE OR REPLACE VIEW WORKER_MANAGER_VU
    AS SELECT W.ENAME WORKER , M.ENAME MANAGER
        FROM EMP W, EMP M  
        WHERE W.MGR = M.EMPNO;
SELECT * FROM WORKER_MANAGER_VU;
-- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수). -- 학생 질문
SELECT DEPTNO, SUM(SAL) FROM EMP E GROUP BY DEPTNO ORDER BY SUM(SAL); -- 1
SELECT ROWNUM RN, A.* FROM(SELECT DEPTNO, SUM(SAL) FROM EMP E GROUP BY DEPTNO ORDER BY SUM(SAL))A; -- 2
SELECT *
    FROM(SELECT ROWNUM RN, A.* 
            FROM(SELECT DEPTNO, SUM(SAL) 
                    FROM EMP E GROUP BY DEPTNO ORDER BY SUM(SAL))A); -- 3
-- 3-1. 부서별 급여합계 등수가 2~3등인 부서번호, 급여합계, 등수를 출력하시오.
SELECT *
    FROM(SELECT ROWNUM RN, A.* 
            FROM(SELECT DEPTNO, SUM(SAL) 
                    FROM EMP E GROUP BY DEPTNO ORDER BY SUM(SAL))A)
    WHERE RN BETWEEN 2 AND 3;

-- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE DESC; -- 1
SELECT ROWNUM, A.* FROM (SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE DESC) A; -- 2
SELECT EMPNO, ENAME, HIREDATE 
    FROM(SELECT ROWNUM RN, A.* 
            FROM (SELECT * FROM EMP ORDER BY HIREDATE DESC) A);
-- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 5명을 출력하시오
SELECT EMPNO, ENAME, HIREDATE 
    FROM(SELECT ROWNUM RN, A.* 
            FROM (SELECT * FROM EMP ORDER BY HIREDATE DESC) A)
    WHERE RN BETWEEN 1 AND 5;
    
-- 6. 사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT EMPNO, ENAME, HIREDATE 
    FROM(SELECT ROWNUM RN, A.* 
            FROM (SELECT * FROM EMP ORDER BY HIREDATE DESC) A)
    WHERE RN BETWEEN 6 AND 10;




