 ① 싱글톤(Singleton) 패턴:  
     싱글톤 패턴을 이용하면, 클래스 하나에 단  하나의 객체만 생성
 ② 전역의 개념으로 객체를 사용: 
     생성자가 여러 개 호출되더라도 실제로 생성되는 객체는 하나이고, 
     모든 곳에서 하나의 객체에만 접근할 수 있음.
 ③ 클래스의 생성자는 private로 막아놓고, static 변수에 인스턴스 변수를 저장.
 ④ 싱글톤 장점: 메모리 절약
 ⑤ 스트레티지(Strategy) 패턴 - 특정 작업을 처리할 때 여러 가지 전략이 있을 때, 그 전략들을 캡슐화해서 필요할 때마다 바꿔 쓸 수 있게 해주는 패턴
 ⑥ 공통된 인터페이스를 정의하고, 이 인터페이스를 구현한 여러 가지 전략 클래스를 생성
 ⑦ 그런 다음, 필요에 따라 어떤 기능을 사용할지 선택
 ⑧ 장점: 유연하고, 변경이 쉬움. 유지보수에 용이.