 ① 상속(inheritance): 기존 클래스(Super 또는 부모클래스)의 속성과 메소드를 상속받아 새로운 클래스(자식클래스)에서 활용 
 ② 다중 상속은 불가능
 ③ 상속의 필요성1) 재사용성: 검증된 프로그램을 상속받음으로써 빠른 시간에 프로그래밍 가능
 ④ 상속의 필요성2) 다양한 객체(타입)을 상속을 통해서 하나의 객체(타입)으로 묶을 수 있음
 ⑤ override(재정의): 부모클래스의 메소드를 자식 클래스에서 재정의
 ⑥ override 단점: 자식클래스에서 재정의하면 부모클래스의 메소드는 사용할 수 없음
 ⑦ extends: 상속을 구현하는 키워드
 ⑧ 생성자: 자식클래스의 생성자는 부모클래스의 생성자를 자동으로 호출
 ⑨ super(매개변수) ; 이 super(매개변수)문장은 반드시 첫 번째 라인에 와야 함
 ⑩ super() ; 매개변수 없는 슈퍼클래스의 생성자 호출