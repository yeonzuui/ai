 ① 익명함수(Anonymous function)
   - 1) 변수에는 반드시 익명함수
   변수명= function(param1, param2){
         함수내용;
   };
   - 2) 익명함수 호출: 변수명(param1, param2); 
   변수명(param1, param2);
   - 3) 화살표 함수를 이용한 익명함수 재정의(overloading 불가): 

 ② 화살표 함수 문법: js6 최신 문법
   - 1) 매개변수 없음 + 구현 2줄 이상: 소괄호, 중괄호 필수
   변수명 = () => {
         함수내용 1;
         함수내용 2;
    };
   - 2) 매개변수 없음 + 구현 1줄 : 중괄호 생략 가능
   변수명 = () => 함수내용;
   - 3) 매개변수 1개 + 구현 2줄 이상: 소괄호 생략 가능
   변수명 = param => {
         함수내용 1;
         함수내용 2;
    };
   - 4) 매개변수 1개 + 구현 1줄: 중괄호, 소괄호 둘 다 생략 가능
   변수명 = param => 함수내용;
   - 5) 매개변수 2개 이상: 소괄호 필수
   변수명 = (param1, param2) => 함수내용;
   - 6) 매개변수 없음 + return 포함
   변수명 = (param1, param2) => {
         return param1 + param2;
    };
   // 변수명 = (param1, param2) => param1 + param2; 와 동일
   - 7) 매개변수 1개 + return 포함
   변수명 = param => {
         return param * param;
    };
    // 변수명 = param =>  param * param; 과 동일
    // 파이썬에서의 lambda함수
   
 ③ 선언적 함수(declarative function)
   - 선언적 함수의 호출은 선언 위에 위치해도 우선 실행됨

 ④ 선언적함수 호출 시 매개변수 갯수가 선언된 매개변수 갯수와 다를 때
   - 초과/미만에 해당하는 매개변수의 값이 undefined로 초기화됨
   - 매개변수가 초과될 때: 초과되는 매개변수의 값은 사용하지 않음. 초기화되더라도 함수 실행 결과에 영향을 미치지 않음
   - 그러나 매개변수가 부족할 때는 함수 실행 결과에 영향을 미침

 ⑤ 가변인자함수(variadic function)
   - 매개변수의 갯수에 따라 다른 기능을 하는 함수
   - 내장함수 Array(param1, param2) 또는 array() 이용
   - 1) 매개변수 2개 이상: 매개변수로 배열을 생성
   Array(23, 500)은 [23, 500] 배열 만든 것과 동일
   - 2) 매개변수 1개: length가 매개변수값인 빈 배열을 생성
   Array(4)는 [, , , ,] 배열 만든 것과 동일
   - 3) 매개변수 0개:  length = 0인 배열 생성
   Array()는 [] 배열 만든 것과 동일

 ⑥ 내부함수
   - 함수 내부에 선언된 함수
   - 동일 이름을 가진 함수 간 충돌을 피하기 위함

 ⑦ 자기호출함수
   - 내부함수와 목적은 동일
   - 생성한 함수 자체를 바로 호출

 ⑧ 콜백함수
   - 어떤 함수의 매개변수에 들어있는 함수

 ⑨ 클로저함수
  - 어떤 함수의 return 값에 들어있는 함수
  - 통상적으로 가독성을 위해 화살표 함수로 생성한다