 ① 
 ② 
 ③ 
 ④ 
 ⑤ 
 ⑥ 
 ⑦ 
 ⑧ 
 ⑨ 
 ⑩ 

// 스트림 객체
// InputStream: 1byte씩 읽을 수 있게 하는 스트림
// FileInputStream("파일경로"): 파일 열기 및 read 준비
// FileNotFoundException: 파일을 찾지 못할 때 발생 → try-catch(예외처리)
// read(): 데이터를 읽고, 읽은 byte를 정수로 표현, 파일 끝에 도달하면 -1을 반환
// close(): finally 블록에서 파일 닫기, 메모리 누수 방지 위함
// IOException: 파일 경로가 잘못되었거나 read/write 권한이 없을 때 발생 → try-catch(예외처리) 
// OutputStream: 데이터를 1byte 단위로 쓸 수 있게 하는 스트림
// FileOutputStream("파일경로", T/F): 파일에 데이터 쓰기, 없는 파일은 생성
// false → default 값, 새로운 데이터 쓰게되면 기존 데이터에 덮어씌움
// true → 기존 데이터를 유지하고 뒤이어 새로운 데이터를 덧붙임
// getBytes(): String을 byte '배열'로 변환
// write(): 파일에 데이터 쓰기
// 파일경로에서 [/]는 [\\]로 대체 가능
// File: 파일과 관련된 속성(크기, 경로, 권한 등)을 가져옴
// length(): 파일의 크기를 byte 단위로 반환, 파일 크기를 측정하는 기본 단위가 byte이기 때문
------------ InputStream, OutputStream 구동 원리는 동일------
// reader: 2byte씩 읽을 수 있게 하는 스트림
// FileReader("파일경로"): 파일 열기 및 read 준비
// writer: 데이터를 2byte 단위로 쓸 수 있게 하는 스트림
// FileWriter("파일경로", T/F): 파일에 데이터 쓰기, 없는 파일은 생성
// BufferedReader: Reader를 보조, FileReader를 감싸서 버퍼링 기능을 추가, 데이터 읽기 기능 향상
// readLine(): 한 줄씩 read. 파일 끝에 도달하면 null을 반환하고 loop 종료
// BufferedReader를 먼저 닫는 것이 좋음: BufferedReader 닫으면 FileReader도 닫힘

// Q. 왜 FileBufferedReader라고 안 하는지?