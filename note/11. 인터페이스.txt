 ① 인터페이스 정의: 두 객체를 연결하는 접속기와 같음
 ② 인터페이스 기능 (1) 작업명세서 역할 (2) 다형성 구현 (3) 기능을 부품화
 ③ (1) 작업명세서 역할: 인터페이스는 메소드의 이름, 매개변수, 리턴type만 정의하여 클래스가 수행해야 할 작업을 명시하는 작업명세서 역할을 함
 ④ 추상클래스와의 차이: 추상 클래스는 일부만 추상메소드로 작성이 가능하지만, 인터페이스는 모든 메소드가 추상메소드여야 함.
 ⑤ 구현 클래스: 인터페이스를 구현하는 클래스는 인터페이스에 정의된 모든 메서드를 override(재정의)를 통해 반드시 구현해야 함
 ⑥ (2) 다형성 구현: 인터페이스를 통해 다양한 클래스가 동일한 메서드를 구현할 수 있어, 코드가 인터페이스 타입을 참조하면 구현체에 관계없이 동작 가능
 ⑦ (3) 기능을 부품화: 인터페이스로 기능을 나누면, 마치 부품처럼 여기저기서 코드를 재사용하기 쉬워짐
 ⑧ 인터페이스명은 앞에 대문자 I를 붙이거나, 뒤에 Impl를 붙이는 것이 관례
 ⑨ default 메소드: 자바 8부터 인터페이스에 디폴트 메소드를 정의할 수 있으며, 이를 통해 구현부를 제공 가능.
 ⑩ 상수 필드: final 키워드를 사용하여 값이 한 번 정해지면 변경되지 않도록 만드는 변수, 대문자로 이름을 짓는 것이 일반적이며 보통 자주 사용되는 값을 의미있게 정의할 때 사용함.

